capability of selenium? 

what is a test case? 

step by step process of valiadating a requirment 

web-based application 

requirements >> user stories 

expected result >> comes from requirment 
actual result >> comes from test 

compare expected and actual >> is same >> passed
is not same >> failed 

defect >> log the defect 

manual testing process >> test case 
Automation test case or test scripts 

test scripts >> create directly from requirement 
you can convert the manual to automation 

excel 
jira zephyr/xray
ALM 
TFS 

components of test case: 
test case ID
test environment 
browser 
Test data 
Scenerio

Test steps: 

pre requirement: 
1. open the browser 

steps: 

2. navigating to url 
3. click on help button
4. validating the help[ page url 
5. validating the help page title
6. validating the help page has chat option
7. validating chat window can be opened from the page 

post requirement: 
8. closing the browser 

Test result: 

writing test case >> 

Automating the test case: web based application - browser 

URL - domain name 

selenium: browser automation tool - it can interact inside a browser
to execute any steps 

google chrome >> 

www.google.com >> windows, mac, linux, ipad

www.geico.com 

geico application - mobile app 

Selenium library - selenium webdriver 
selenium java 
selenium server standalone 

jar file >> 
how to interact with an application inside a browser 

20 functions 

webelement >> the component of a web application that any user can 
interact with

text box - type something
button - click
drop down menu - select - options are already defined 
links - click >> navigates us to a new page 

interacting with web element 

1. find out the right web element >> locating tecniques 

<input type="text" id="usernamereg-firstName" class="ureg-fname input-with-icon icon-name " autocomplete="given-name" name="firstName" placeholder="First&nbsp;name" aria-label="First&nbsp;name" value="" maxlength="32" aria-required="true" data-rapid-tracking="true" data-ylk="elm:input;elmt:fname;slk:first-name;">

< tagname attribute1 = value attribute2= value attribute3= value>

id
name



2. interacting based on the type of web element 

WebElement datatype: is a specific datatype created in selenium library, 
in this datatype we can store any webelement
how to setup any programminng library? 

jar files >> java library - java archived files 

jdk + eclipse >> 
selenium java >> 2.57
selenium server standalone >> 2.57 

driver file for specific browser 
chromedriver >> 96 , 97 
browswer >> 96 , 97 

what is a programming library ? 

any programming library is pre-written code, functions/methods 

what is selenium library, usages of selenium library? 

pre-written code - interacting web browser 




opening the browser
navigating to an url 
reading the url value 
reading the title 
verifying any web element is displayed in web page 
typing something in a text box
clicking something in a button 

organizing code >> 


every non-runnable class in java is also a datatype 

car 

car c = new car(); // references variable

int x = 12; 

isDisplayed >> webdriver - browser
isEnabled >> webdriver - browser 
isSelected >> webelement - web element
getText >> webelement - web element
getCurrentUrl >> webelement - web element
getTitle >> webelement - web element

locating tecniques - id, name, xpath 

linktext >> link , anchor tag, a tag

drop down - 
synchronization tecniques - 

req: if an user enters first name, last name and mistakenly leave the page, 
if user comes back within 2 seconds, the value will be available 

test scenerio: user enters michale for firstrname and schure for last name, and click on help button, if the user click on the back button within 2 seconds michale and schure should be available in the text boxes 

drop down - need to use functions from Select Class 

Select dd = new Select(webelement);

Synchronization with Time: 

implicit wait: it makes sure all web elements of the web page is loaded 

thread.sleep(5000);

1 second >> 4 seconds 

7 seconds >> 

driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);






















